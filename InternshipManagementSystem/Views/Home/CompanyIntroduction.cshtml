@model InternshipManagementSystem.Models.CompanyIntroductionViewModel

@{
    ViewBag.Title = "Companies";
}
<br />
<br />
<h2>Companies</h2>
<hr />
<div class="row companiesInfoRow">
    @if (Model.companies.FirstOrDefault() != null || Model.targetedCompanies.FirstOrDefault() != null)
    {
        // for desktop
        <nav class="col-sm-3 companiesList hidden-xs">
            <div class="list-group nav nav-stacked">
                @using (Html.BeginForm("Search", "Home", null, FormMethod.Post, new { @class = "form-horizontal", role = "form", style = "overflow: hidden; " }))
                {
                    @Html.AntiForgeryToken()
                    <div style="width:40px; float: right;">
                        <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-search"></span></button>
                    </div>
                    <div style="overflow: hidden">
                        <input type="text" class="form-control" name="keyWords">
                    </div>
                }
            </div>
            <div class="scroll-bar-wrap">
                <div class="list-group nav nav-stacked scroll-box" style="overflow-y: scroll; height: 200px">
                    @{
                        var orderedCompanies = Model.companies.OrderBy(c => c.CompanyOrder);
                        var targetedCompanies = Model.targetedCompanies.OrderBy(c => c.CompanyOrder);
                        var counter1 = 1;
                        string anchorId;
                        string tabContentId;
                        string submitInputId;
                        if (targetedCompanies.Count() != 0)
                        {
                            foreach (var c in targetedCompanies)
                            {
                                if (c.CompanyIntroduction != null && c.InternIntroduction != null)
                                {
                                    var replacedCompanyName = c.CompanyOrder.ToString();
                                    anchorId = replacedCompanyName + "Anchor";
                                    tabContentId = replacedCompanyName + "Tab";
                                    submitInputId = replacedCompanyName;
                                    using (Ajax.BeginForm("DisplayUserSelectedCompanyDetail", "Home", null, new AjaxOptions { UpdateTargetId = "CompanyDetail", OnComplete = "calculation" }, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (counter1 == 1 && Model.targetedCompanies.Count == 0)
                                        {
                                            <a id="@anchorId" href="#" onclick="selectCompany('@replacedCompanyName')" class="hidden-xs list-group-item active targeted-Company-tab">@Html.Raw(c.CompanyName)</a>
                                        }
                                        else
                                        {
                                            <a id="@anchorId" href="#" onclick="selectCompany('@replacedCompanyName')" class="hidden-xs list-group-item targeted-Company-tab">@Html.Raw(c.CompanyName)</a>
                                        }
                                        <input hidden type="text" name="company_order_string" value="@replacedCompanyName" />
                                        <input hidden type="submit" id="@submitInputId" />
                                        <input hidden type="text" name="keyWords" value="@Model.keyWords" />
                                    }
                                    counter1++;
                                }
                            }
                        }
                        foreach (var c in orderedCompanies)
                        {
                            if (c.CompanyIntroduction != null && c.InternIntroduction != null)
                            {
                                var replacedCompanyName = c.CompanyOrder.ToString();
                                anchorId = replacedCompanyName + "Anchor";
                                tabContentId = replacedCompanyName + "Tab";
                                submitInputId = replacedCompanyName;
                                using (Ajax.BeginForm("DisplayUserSelectedCompanyDetail", "Home", null, new AjaxOptions { UpdateTargetId = "CompanyDetail", OnComplete = "calculation" }, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    if (counter1 == 1 && Model.targetedCompanies.Count == 0)
                                    {
                                        <a id="@anchorId" href="#" onclick="selectCompany('@replacedCompanyName')" class="hidden-xs list-group-item active">@Html.Raw(c.CompanyName)</a>
                                    }
                                    else
                                    {
                                        <a id="@anchorId" href="#" onclick="selectCompany('@replacedCompanyName')" class="hidden-xs list-group-item">@Html.Raw(c.CompanyName)</a>
                                    }
                                    <input hidden type="text" name="company_order_string" value="@replacedCompanyName" />
                                    <input hidden type="submit" id="@submitInputId" />
                                }
                                counter1++;
                            }

                        }
                    }
                </div>
                <div class="cover-bar"></div>
            </div>
        </nav>

           

                        <div class="col-sm-9 hidden-xs" id="CompanyDetail">
                            <div class="modalOverlay"></div>
                            @{
                                var thisCompany = targetedCompanies.Count() == 0 ? orderedCompanies.Where(c => c.CompanyIntroduction != null).FirstOrDefault() : targetedCompanies.FirstOrDefault();
                                if (thisCompany != null)
                                {
                                    <h3>@Html.Raw(thisCompany.CompanyName)</h3>
                                    <hr />
                                    <h3>
                                        Company Introduction
                                    </h3>
                                    <div class="displayDiv">
                                        @Html.Raw("<p>" + thisCompany.CompanyIntroduction + "</p>")
                                    </div>
                                    <h3>Internship Plan</h3>
                                            <div class="displayDiv">
                                                @Html.Raw("<p>" + thisCompany.InternIntroduction + "</p>")
                                            </div>
                                            <h3>Company Location</h3>
                                            @Html.Raw("<p>" + thisCompany.CompanyLocation + "</p>")
                                            <h3>Person In Charge</h3>
                                            @Html.Raw("<p>" + thisCompany.PersonInCharge + "</p>")
                                            <h3>Contact Number</h3>
                                            @Html.Raw("<p>" + thisCompany.ContactNumber + "</p>")
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <strong>No company introduction and internship plan</strong>
                                    </div>
                                }

                            }
                        </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <strong>No company introduction and internship plan</strong>
                                    </div>
                                }
</div>

@if (Model.companies.FirstOrDefault() != null || Model.targetedCompanies.FirstOrDefault() != null)
{
    var orderedCompanies = Model.companies.OrderBy(c => c.CompanyOrder);
    var targetedCompanies = Model.targetedCompanies.OrderBy(c => c.CompanyOrder);
<nav class="col-xs-12 companiesList hidden-lg hidden-md hidden-sm">
    <div class="list-group nav nav-stacked">
        @using (Ajax.BeginForm("Search", "Home", null, new AjaxOptions { UpdateTargetId = "CompanyDetail", OnComplete = "calculation" }, new { @class = "form-horizontal", role = "form", style = "overflow: hidden; " }))
        {
            @Html.AntiForgeryToken()
            <div style="width:40px; float: right;">
                <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-search"></span></button>
            </div>
                                    <div style="overflow: hidden">
                                        <input type="text" class="form-control" id="usr">
                                    </div>
        }
        @{
            if (targetedCompanies.Count() != 0)
            {
                foreach (var c in targetedCompanies)
                {
                    if (c.CompanyIntroduction != null && c.InternIntroduction != null)
                    {

                        var replacedCompanyName = c.CompanyOrder.ToString();
                        var mobileAnchorId = replacedCompanyName + "MobileAnchor";
                        var tabContentId = replacedCompanyName + "Tab";
                        var submitInputIdMobile = replacedCompanyName + "Mobile";
                        using (Ajax.BeginForm("DisplayUserSelectedCompanyDetailForMobile", "Home", null, new AjaxOptions { UpdateTargetId = tabContentId, OnComplete = "calculation" }, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <a id="@mobileAnchorId" onclick="selectCompany('@replacedCompanyName')" class="hidden-lg hidden-md hidden-sm list-group-item">@Html.Raw(c.CompanyName)</a>
                                                    <a hidden data-toggle="collapse" target="#@tabContentId" href="#@tabContentId" id="hidden-@mobileAnchorId">@Html.Raw(c.CompanyName)</a>
                                                    <div id="@tabContentId" class="collapse col-xs-12 hidden-lg hidden-md hidden-sm"></div>
                                                    <input hidden type="text" name="company_order_string" value="@replacedCompanyName" />
                                                    <input hidden type="submit" id="@submitInputIdMobile" />
                                                    <input hidden type="text" name="keyWords" value="@Model.keyWords" />
                        }
                    }

                }
            }
            foreach (var c in orderedCompanies)
            {
                if (c.CompanyIntroduction != null && c.InternIntroduction != null)
                {
                    var replacedCompanyName = c.CompanyOrder.ToString();
                    var mobileAnchorId = replacedCompanyName + "MobileAnchor";
                    var tabContentId = replacedCompanyName + "Tab";
                    var submitInputIdMobile = replacedCompanyName + "Mobile";
                    using (Ajax.BeginForm("DisplayUserSelectedCompanyDetailForMobile", "Home", null, new AjaxOptions { UpdateTargetId = tabContentId, OnComplete = "calculation" }, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <a id="@mobileAnchorId" onclick="selectCompany('@replacedCompanyName')" class="hidden-lg hidden-md hidden-sm list-group-item">@Html.Raw(c.CompanyName)</a>
                                                <a hidden data-toggle="collapse" target="#@tabContentId" href="#@tabContentId" id="hidden-@mobileAnchorId">@Html.Raw(c.CompanyName)</a>
                                                <div id="@tabContentId" class="collapse col-xs-12 hidden-lg hidden-md hidden-sm"></div>
                                                <input hidden type="text" name="company_order_string" value="@replacedCompanyName" />
                                                <input hidden type="submit" id="@submitInputIdMobile" />
                    }
                }

            }
        }
    </div>
            
</nav>
            }
            else
            {
                <div class="alert alert-info">
                    <strong>No company introduction and internship plan</strong>
                </div>
            }

<script>
    $(document).ready(function () {
        if ($(window).width() >= 768) {
            $(".companiesList").css("position", "fixed");
            calculation();
        }
        else {
            $(".companiesList").css("position", "static");
        }
        $(window).resize(function () {
            if ($(window).width() >= 768) {
                $(".companiesList").css("position", "fixed");
                calculation();
            }
            else {
                $(".companiesList").css("position", "static");
            }
        });
    })

    function calculation() {
        $("#CompanyDetail").css('margin-left', $(".companiesList").outerWidth());
    }

    var selectCompanyCounter;
    var selectCompanyLatestClickedAnchor;

    function selectCompany(companyName) {

        if ($(window).width() <= 768) {
            if (selectCompanyLatestClickedAnchor != companyName)
                selectCompanyCounter = 0;
            selectCompanyCounter += 1;
            if (selectCompanyLatestClickedAnchor != undefined && companyName != $('.list-group-item.active').attr("id").slice(0, -6) && $("#" + $('.list-group-item.active').attr("id").slice(0, -6) + "Tab").hasClass("in")) {
                $("#hidden-" + $('.list-group-item.active').attr("id").slice(0, -6) + "MobileAnchor").click();
                $("#" + $('.list-group-item.active').attr("id").slice(0, -6) + "Tab").empty();
            }
            $("#hidden-" + companyName + "MobileAnchor").click();
            if (selectCompanyCounter % 2 == 1 && !$('#' + companyName + "Tab").html().length > 0) {
                $('#' + companyName + "Mobile").click();
                //$('#' + companyName + "Tab").removeClass("")
            }
            else{
                //$('#' + companyName + "Tab").empty();
            }
            selectCompanyLatestClickedAnchor = companyName;
        }
        else {
            $(".modalOverlay").show();
            $('#' + companyName).click();
        }
        $('.list-group-item.active').removeClass('active');
        $('#' + companyName + 'Anchor').addClass("active");
        $('#' + companyName + 'MobileAnchor').addClass("active");
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
