@model InternshipManagementSystem.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security
<br />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <br />
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders) {
                        <input hidden type="submit" style="background: url(http://icons.iconarchive.com/icons/marcus-roberto/google-play/256/Google-plus-icon.png)" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account" />
                        <!-- Place this code where you want the badge to render. -->
                        <a type="submit" onclick="getElementById('@p.AuthenticationType').click()" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account" href="#"
                           rel="publisher" target="_top" style="text-decoration:none;">
                            <img src="//ssl.gstatic.com/images/icons/gplus-64.png" alt="Google+" style="border:0;width:64px;height:64px;" />
                        </a>
                    }
                </p>
            </div>
        }
    }
}
